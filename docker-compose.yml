version: '3.8'

services:
  # =============================================================================
  # Database & Auth Services
  # =============================================================================
  
  # Supabase Local Development
  supabase:
    image: supabase/supabase-dev:latest
    container_name: whale-tracker-supabase
    ports:
      - "54321:54321"  # Supabase Studio
      - "54322:54322"  # API
      - "54323:54323"  # Auth
      - "54324:54324"  # Storage
      - "54325:54325"  # Realtime
      - "54326:54326"  # Edge Functions
      - "54327:54327"  # PostgREST
      - "54328:54328"  # Kong
      - "54329:54329"  # GoTrue
      - "54330:54330"  # Postgres
      - "54331:54331"  # Redis
      - "54332:54332"  # Storage API
      - "54333:54333"  # Dashboard
    environment:
      POSTGRES_PASSWORD: ${SUPABASE_DB_PASSWORD:-postgres}
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      DASHBOARD_USERNAME: supabase
      DASHBOARD_PASSWORD: this_password_is_insecure_and_should_be_updated
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./infra/supabase:/supabase
    networks:
      - whale-tracker-network

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: whale-tracker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - whale-tracker-network

  # =============================================================================
  # Application Services
  # =============================================================================

  # Backend API (FastAPI)
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: whale-tracker-backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    depends_on:
      - supabase
      - redis
    networks:
      - whale-tracker-network
    restart: unless-stopped

  # Frontend (Streamlit)
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: whale-tracker-frontend
    ports:
      - "${FRONTEND_PORT:-8501}:8501"
    environment:
      - BACKEND_URL=http://backend:8000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    volumes:
      - ./apps/frontend:/app
    depends_on:
      - backend
    networks:
      - whale-tracker-network
    restart: unless-stopped

  # Workers (Data Ingestion & Processing)
  workers:
    build:
      context: ./apps/workers
      dockerfile: Dockerfile
    container_name: whale-tracker-workers
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - ALCHEMY_API_KEY=${ALCHEMY_API_KEY}
      - ALCHEMY_WEBSOCKET_URL=${ALCHEMY_WEBSOCKET_URL}
      - BYBIT_API_KEY=${BYBIT_API_KEY}
      - BYBIT_SECRET_KEY=${BYBIT_SECRET_KEY}
      - BYBIT_WEBSOCKET_URL=${BYBIT_WEBSOCKET_URL}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - WORKERS_COUNT=${WORKERS_COUNT:-2}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./apps/workers:/app
    depends_on:
      - supabase
      - redis
    networks:
      - whale-tracker-network
    restart: unless-stopped

  # N8N Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: whale-tracker-n8n
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-false}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-password}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_DIAGNOSTICS_ENABLED=false
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - BACKEND_URL=http://backend:8000
    volumes:
      - n8n_data:/home/node/.n8n
      - ./apps/n8n/workflows:/home/node/.n8n/workflows
    depends_on:
      - backend
    networks:
      - whale-tracker-network
    restart: unless-stopped

  # =============================================================================
  # Monitoring & Observability
  # =============================================================================

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: whale-tracker-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./infra/docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - whale-tracker-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: whale-tracker-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - whale-tracker-network
    restart: unless-stopped

# =============================================================================
# Networks
# =============================================================================
networks:
  whale-tracker-network:
    driver: bridge

# =============================================================================
# Volumes
# =============================================================================
volumes:
  supabase_data:
  redis_data:
  n8n_data:
  prometheus_data:
  grafana_data:
